# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]

jobs:

  check-docker:
    runs-on: self-hosted
    steps:
      - name: Check if Docker is installed
        id: check-docker
        run: |
          if command -v docker &> /dev/null; then
            echo "Docker is installed"
            echo "docker_exist=true" >> $GITHUB_ENV
          else
            echo "Docker is not installed"
            echo "docker_exist=false" >> $GITHUB_ENV
          fi
      - name: if Docker Exist Conditional Output
        env:
          CONTAINERS_EXIST: ${{ steps.check-docker.outputs.docker_exist }}
        run: |
          if [ "$CONTAINERS_EXIST" = "true" ]; then
            echo "Running commands for existing containers."
            if docker ps -q --filter "expose=80/tcp" --filter "status=running" > /dev/null; then
              docker stop $(docker ps -q --filter "expose=80/tcp" --filter "status=running") 
            fi
          fi

  build:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Check if Maven is installed
        run: |
          if ! command -v mvn &> /dev/null; then
            echo "Maven not found, installing..."
            echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S yum install -y maven
          else
            echo "Maven is already installed"
          fi
      - name: Build with Maven
        run: mvn -B package --file pom.xml
      - name: Running LISTEN Ports list
        run: echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S lsof -i -P -n | grep LISTEN
      - name: Check for Running Containers Exposing Port 80
        run: |
          if echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S lsof -t -i:80 > /dev/null; then
            echo "There are running port 80."
            echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S kill -9 $(echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S lsof -t -i:80)
          fi

      - name: JVM and execute in Background
        run: echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S java -jar target/MSB-0.0.1-SNAPSHOT.war &