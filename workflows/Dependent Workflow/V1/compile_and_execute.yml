name: "Compile and Execute a Java Maven Dependency Project"

on:
  push:
    branches: [ "main" ]
  workflow_run:
    workflows: [ "Ensure that all dependencies are installed." ]
    types:
      - completed

jobs:
  check-port:
    name: "Ensure that Port 80 is not in a running state."
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: "List of Ports Currently in the LISTEN State"
        run: echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S lsof -i -P -n | grep LISTEN
      - name: "Identify the process on port 80"
        id: check-port
        run: |
          if echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S lsof -t -i:80 | xargs -n 1 ps -o comm= -p | grep containerd > /dev/null; then
            docker stop $(docker ps -q --filter "expose=80/tcp" --filter "status=running") 
          elif echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S lsof -t -i:80 > /dev/null; then
            echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S kill -9 $(echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S lsof -t -i:80)
          fi
  compile_and_execute:
    name: "Compile and Execute a Java Maven Dependency Project"
    runs-on: self-hosted
    needs: check-port
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v3
      - name: "Build with Maven"
        run: mvn -B package --file pom.xml
      - name: "Run the project in the background using the JVM with the command 'java -jar target/..SNAPSHOT.war'."
        run: echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S java -jar target/MSB-0.0.1-SNAPSHOT.war &
